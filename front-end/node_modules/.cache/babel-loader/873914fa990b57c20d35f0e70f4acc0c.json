{"remainingRequest":"D:\\Users\\mygit\\Cloud_native_first_attempt\\front-end\\node_modules\\thread-loader\\dist\\cjs.js!D:\\Users\\mygit\\Cloud_native_first_attempt\\front-end\\node_modules\\babel-loader\\lib\\index.js!D:\\Users\\mygit\\Cloud_native_first_attempt\\front-end\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Users\\mygit\\Cloud_native_first_attempt\\front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Users\\mygit\\Cloud_native_first_attempt\\front-end\\src\\components\\Save.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Users\\mygit\\Cloud_native_first_attempt\\front-end\\src\\components\\Save.vue","mtime":1561116172958},{"path":"D:\\Users\\mygit\\Cloud_native_first_attempt\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1561116036365},{"path":"D:\\Users\\mygit\\Cloud_native_first_attempt\\front-end\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1561116159625},{"path":"D:\\Users\\mygit\\Cloud_native_first_attempt\\front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1561116030101},{"path":"D:\\Users\\mygit\\Cloud_native_first_attempt\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1561116036365},{"path":"D:\\Users\\mygit\\Cloud_native_first_attempt\\front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1561116163773}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'Save',\n  props: ['simulation'],\n  mounted: function () {\n    this.setBoard(this.simulation[0]);\n  },\n  data: function () {\n    return {\n      board: [],\n      simulationStepInterval: 500,\n      simulationPlaying: false,\n      generation: 0\n    };\n  },\n  methods: {\n    setBoard: function (board) {\n      this.board = [];\n      this.board = board;\n    },\n    sleep: function (time) {\n      return new Promise(resolve => setTimeout(resolve, time));\n    },\n    showSimulation: function () {\n      this.simulationPlaying = true;\n      this.setBoard(this.simulation[0]);\n      this.generation = 0;\n\n      for (let s = 0; s < this.simulation.length; s++) {\n        this.sleep((s + 1) * this.simulationStepInterval).then(() => {\n          this.setBoard(this.simulation[s]);\n          this.generation = s + 1;\n        });\n      }\n\n      this.sleep(this.simulation.length * this.simulationStepInterval).then(() => {\n        this.simulationPlaying = false;\n      });\n    }\n  }\n};",{"version":3,"sources":["Save.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAoBA,eAAA;AACA,EAAA,IAAA,EAAA,MADA;AAEA,EAAA,KAAA,EAAA,CAAA,YAAA,CAFA;AAGA,EAAA,OAAA,EAAA,YAAA;AACA,SAAA,QAAA,CAAA,KAAA,UAAA,CAAA,CAAA,CAAA;AACA,GALA;AAMA,EAAA,IAAA,EAAA,YAAA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,EADA;AAEA,MAAA,sBAAA,EAAA,GAFA;AAGA,MAAA,iBAAA,EAAA,KAHA;AAIA,MAAA,UAAA,EAAA;AAJA,KAAA;AAMA,GAbA;AAcA,EAAA,OAAA,EAAA;AACA,IAAA,QAAA,EAAA,UAAA,KAAA,EAAA;AACA,WAAA,KAAA,GAAA,EAAA;AACA,WAAA,KAAA,GAAA,KAAA;AACA,KAJA;AAKA,IAAA,KAAA,EAAA,UAAA,IAAA,EAAA;AACA,aAAA,IAAA,OAAA,CAAA,OAAA,IAAA,UAAA,CAAA,OAAA,EAAA,IAAA,CAAA,CAAA;AACA,KAPA;AAQA,IAAA,cAAA,EAAA,YAAA;AACA,WAAA,iBAAA,GAAA,IAAA;AACA,WAAA,QAAA,CAAA,KAAA,UAAA,CAAA,CAAA,CAAA;AACA,WAAA,UAAA,GAAA,CAAA;;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,UAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,aAAA,KAAA,CAAA,CAAA,CAAA,GAAA,CAAA,IAAA,KAAA,sBAAA,EAAA,IAAA,CACA,MAAA;AACA,eAAA,QAAA,CAAA,KAAA,UAAA,CAAA,CAAA,CAAA;AACA,eAAA,UAAA,GAAA,CAAA,GAAA,CAAA;AACA,SAJA;AAMA;;AACA,WAAA,KAAA,CAAA,KAAA,UAAA,CAAA,MAAA,GAAA,KAAA,sBAAA,EAAA,IAAA,CACA,MAAA;AACA,aAAA,iBAAA,GAAA,KAAA;AACA,OAHA;AAKA;AAzBA;AAdA,CAAA","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"input-group p-2 col-5\">\r\n      <span class=\"input-group-prepend offset-1 col-2\">单位时间间隔（毫秒）</span>\r\n      <input v-model=\"simulationStepInterval\" type=\"number\" class=\"form-control offset-1 col-7\" placeholder=\"单位时间间隔（毫秒）\"/>\r\n    </div>\r\n    <div v-for=\"(row, i) in board\" v-bind:key=\"i\" class=\"pb-1\">\r\n      <span v-for=\"(cell, j) in row\" v-bind:key=\"j\" class=\"pl-1\">\r\n        <img v-if=\"cell === 0\" src=\"@/assets/dead.png\" width=\"32px\" height=\"32px\"/>\r\n        <img v-else-if=\"cell === 1\" src=\"@/assets/alive.png\" width=\"32px\" height=\"32px\"/>\r\n      </span>\r\n    </div>\r\n    <div class=\"p-2\">第 {{ generation }} 代</div>\r\n    <div class=\"p-2\">\r\n      <button v-bind:disabled=\"simulationPlaying\" class=\"btn btn-block btn-outline-success\" v-on:click=\"showSimulation()\">播放！</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Save',\r\n  props: ['simulation'],\r\n  mounted: function () {\r\n    this.setBoard(this.simulation[0])\r\n  },\r\n  data: function () {\r\n    return {\r\n      board: [],\r\n      simulationStepInterval: 500,\r\n      simulationPlaying: false,\r\n      generation: 0\r\n    }\r\n  },\r\n  methods: {\r\n    setBoard: function (board) {\r\n      this.board = []\r\n      this.board = board\r\n    },\r\n    sleep: function (time) {\r\n      return new Promise((resolve) => setTimeout(resolve, time))\r\n    },\r\n    showSimulation: function () {\r\n      this.simulationPlaying = true\r\n      this.setBoard(this.simulation[0])\r\n      this.generation = 0\r\n      for (let s = 0; s < this.simulation.length; s++) {\r\n        this.sleep((s + 1) * this.simulationStepInterval).then(\r\n          () => {\r\n            this.setBoard(this.simulation[s])\r\n            this.generation = s + 1\r\n          }\r\n        )\r\n      }\r\n      this.sleep(this.simulation.length * this.simulationStepInterval).then(\r\n        () => {\r\n          this.simulationPlaying = false\r\n        }\r\n      )\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"sourceRoot":"src/components"}]}